Git 

Git: Version control system

Why do we need this?

problems without git
- not collaboration system
- merging manually
- not version control
- Risk of losing work


problem solved with git
- team collaboration
- branching & merging
- versions control
- no lost work
- fast development

what we can do with git
repo
clone
branches
commit
merge
rollback 
contribute open source
flexible environment
version control: modify, record, revert, compare, manage
manage and create remote repo.
data secure.
pull request to merge with main branch


limitations with other version control system?
- no centralized architecture
- changes can not be done offline.
- file are managed by central server.

why to use git over other version control system?
- everyone gets a full copy of the project on their machine
Note: git it only the one stop solution for all the problem.


What is git?
- version control(speed, security, data integrity)
- 2005 (create of Linux cornel)


install? -- done

launch the git bash
git --version (display the version of git)


3 configuration levels
- system level --system:
	- top level
	- /etc/git/config
	- git config --list --system
	- applicable to all the system on which git is installed.

- global level --global
	- next level after system
	- user specific settings
	- git config --list --global
	- /.gitcofig

- local level --local
	- git config --list --local
	- last level user repo level
	- .git/config

Note: local override the global and global override the system level.

fatal: --local can only be used inside a git repository
user.name
user.email


----------------------------------------------
class 2
change the default code editor to vscode: git config --global code.editor "code--wait"

check the configurations list: git config --list

Quiz
Q. What are the characteristics of a version control system? 

Select the correct answer 
A. Recording changes to a file or set of files over time 
B. Identifying who made the changes and when 
C. Comparing and reverting to a previous state 
D. All of the above   (C)


Q. Which of the following would be true of how a distributed version control system is used? 

Select the correct answer 
A. Each developer would manually copy their files into a time-stamped directory 
B. Every developer can check out project files from a central server, but would have to refer to the central server for project history details 
C. Every developer would have a local copy of the entire repository including files and project history   (C)
D. Every developer would have a local copy of the entire repository including files but excluding project history. 


Q. What are the three levels of configurations available in Git? 

Select the correct answer 
A. System, Global, and Local  (C)
B. System, Global, and User 
C. Global, User, and Repository 
D. User, System, and Global 

Create a git repo
create an empty directory --  (mkdir <dirName>)
convert the dir to repo  -- git init
to check the status -- git status
it will take you to branch master without any commit.

Note: git init command create an hidden directory that stores all the metadata required for it to function.

to show hidden folder of .git --  (ls -la)
to check the total number of files/folder -- ls -lrt
check the physical working directory  --- pwd
create and initialize dir at the same time -- git init <dirName>


git maintain 3 snapshots of a file in separate dir.
1. working directory- git init (git doesnot track the file.) 
	to tract a file we have to stage the file.

2. staging area: git add once the staging is done it stores the file into .git/index it called as staging or a index.
	it send back to another area or repo that is local repo.

3. local repo: git commit 

Note: while committing it is important to add a message string using the -m flag if missing a default editor opens and ask for the comment.

to check the logs -- git log
- commit id
- author
- date
- commit message

to check the logs in one line -- git log --oneline

----------------------------------------------
class 3
echo "Message" >> fileName -- to edit the file
echo "<html> </html>" >> index.html

cat filename -- the content of file

how to track between the stages.
Tracking is use to check the difference b/w the file.
Working dir, staging area, local repo

git diff:-  b/w modified file in working dir and its staging.
git diff --staged: diff b/w staged file and the last commit of same file
commits are identified by using pointers called as head.

3 version of file in repo
- last commit is made as head
- pen ultimate head is marked as head1
- next head will be head 2 and so on

NOTE: "git diff --staged" is similar to "git diff head"

it will difficult for use to count the number of heads so its best practice to use the hash code eg:

git diff <commit hash code>

Revert to early commit
git log
git checkout
git status
git reset


----------------------------------------------
class 4

Delete a file in git
- git rm <file name>: delete the file from staging are and working directory.

	what if we want to delete the file only from the staging are?

- git rm --cached <filename>
- git status: to confirm

Note: this file will be untracked as it is removed from the staging area.

even if wee delete the file its commit history will remain in the repo. user need to know which version need to be restored and revert the deletion.

git checkout <version> <filename>


ignore file
it is used to ignore the not import files.
to add the file forcefully in the git for which pattern is matching use 
-f flag


rename the file
- git mv <filename> <newfilename>
- git add
- git commit
- git status


QUIZ:
Which of the following would result in a file being "untracked" in Git? 
Select the correct answer 
A. A file being added into the staging area 
B. A file being committed into the local repository 
C. A file being modified since last commit 
D. A file being added to the working directory (C)


Which of the following is correct about the "staging area? 
Select the correct answer 
A. A location that consists of all committed files 
B. A location that collects all the files that would be included in the next commit  (C)
C. A location consisting of the metadata that Git uses to manage files. 
D. A location where untracked files reside 


Which of the following statements is correct about the git directory content? 
Select the correct answer 
A. It contains all the staged files 
B. It contains all the staged and tracked files 
C. It contains all metadata that Git needs to function  (C)
D. It contains the configurations specific to that repository 


Which of the following command will display the status of the repository in Git? 
Select the correct answer 
A. git status'  (C)
B. git log' 
C. git init' 
D. git branch' 

----------------------------------------------
class 5
GitHub
web base git repository hosting service
web interface for user to upload the files in there repo.

Class 5 github notes

it takes the complete commit history from local repo to remote repo. 

Remote repo refer as origin.
local repo refer to master.

extra features for storing the files.
- publish project
- collaboration.

90% of fortune 100 companies use the GitHub

Feature offered by GitHub: Code, Plan, Collaborate, Automate, secure

github provides 2 protocols for repo creation.
- https
- ssh

GitHub using SSH
- ensure local repo is ready
- create a ssh key
- config GitHub with ssh public key
- create a GitHub repo
- push from local to GitHub repo.

--------------------------------------
class 6 

https
	local repo: git init
	add file to local repo: git add .
	we have to commit it: git commit -m "first commit"
	paste the link from GitHub repo
	git push origin master


https vs ssh
https (recommended for most users)
- it uses GitHub username and password.

pros: 
- easy to setup.
- it works behind most firewalls and proxies.
- it is recommended for most new users.


SSH (used for automation & security)
- no need to enter credentials repeatedly after setup
- more security
- best for automation (ci/cd)

cons:
- required SSH
- May be blocked on restricted n/w (port 22 is sometime blocked)
- more setup steps.


Pull Commit from GitHub
many times developer has to change the content. for that they need to bring back the file.

command: git pull


if you want to collaborate with local and remote repo. 
we use 
- git pull: use when you make some changes in remote repo and want in local repo
- git push: use when you make some changes in local repo and want in remote repo

 



 








